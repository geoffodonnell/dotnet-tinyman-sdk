# Build CI Pipeline

name: DevelopCI_$(Year:yyyy).$(Month).$(DayOfMonth).$(Rev:r)    

trigger:
- develop

variables:
  buildConfiguration: 'Release'
  packageId: 'Tinyman.Develop.CI'

pool:
  vmImage: ubuntu-latest

steps:
- task: UseDotNet@2
  displayName: 'Install .Net Core SDK'
  inputs:
    packageType: 'sdk'
    version: '3.1.x'

- task: Assembly-Info-NetCore@2
  displayName: 'Update assembly info'
  inputs:
    Path: '$(Build.SourcesDirectory)/src/'
    FileNames: 'Tinyman/Tinyman.csproj'
    InsertAttributes: false
    FileEncoding: 'auto'
    WriteBOM: false
    FileVersionNumber: '$(Build.BuildNumber)'
    PackageVersion: '$(Build.BuildNumber)'
    LogLevel: 'verbose'
    FailOnWarning: false
    DisableTelemetry: true

- task: DotNetCoreCLI@2
  displayName: 'Build Tinyman .NET SDK'
  inputs:
    command: 'build'
    projects: 'src/Tinyman/Tinyman.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Test Tinyman .NET SDK'
  inputs:
    command: 'test'
    projects: 'test/Tinyman.UnitTest/Tinyman.UnitTest.csproj'
    arguments: '--configuration $(buildConfiguration)'

#- task: DotNetCoreCLI@2
#  displayName: 'Pack Tinyman .NET SDK Nuget package'
#  inputs:
#    command: 'pack'
#    packagesToPack: 'src/Tinyman/Tinyman.csproj'
#    configurationToPack: 'Release'
#    nobuild: true
#    versioningScheme: 'byBuildNumber'

- task: DotNetCoreCLI@2
  displayName: 'Pack Tinyman .NET SDK Nuget package'
  inputs:
    command: 'custom'
    custom: 'pack'
    arguments: '$(Build.SourcesDirectory)/src/Tinyman/Tinyman.csproj --output $(Build.ArtifactStagingDirectory) --no-build /p:Configuration=$(buildConfiguration) /p:PackageID=$(packageId) /p:PackageVersion=$(AssemblyInfo.PackageVersion) --verbosity Detailed'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Tinyman .NET SDK artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'